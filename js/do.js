var Game = {
	level_1 : {
		type : {
			0 : 'bare',
			1 : 'ground',		//地面
			2 : 'ask',			//问号
			3 : 'brick',		//砖块
			4 : 'pipe1',		//管道1
			5 : 'pipe2',		//管道2
			6 : 'pipe3',		//管道3
			7 : 'pipe4',		//管道4
			8 : 'stone',		//石头
			9 : 'flag1',		//旗帜1
			10 : 'flag2',		//旗帜2
			11 : 'flag3',		//旗帜3
			12 : 'flag4',		//旗帜4
			13 : 'end1',		//终点1
			14 : 'end2',		//终点2
			15 : 'end3',		//终点3
			16 : 'end4',		//终点4
			17 : 'end5',		//终点5
			18 : 'end6',		//终点6
			19 : 'end7',		//终点7
		},
		arrMap : [		//地图
					[	//第一屏
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
						1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
					],
					[	//第二屏
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,3,0,3,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,0,0,0,0,0,0,0,0,0,0,0,6,7,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,7,0,0,0,0,0,0,0,0,0,0,0,6,7,0,0,0,0,
						1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
						1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
					],
					[	//第三屏
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,4,5,0,0,0,0,0,0,0,0,0,0,0,0,4,5,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,6,7,0,0,0,0,0,0,0,0,0,0,0,0,6,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,6,7,0,0,0,0,0,0,0,0,0,0,0,0,6,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,6,7,0,0,0,0,0,0,0,0,0,0,0,0,6,7,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,
						1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1
					],
					[	//第四屏
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,3,3,3,3,3,3,3,3,0,0,0,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,3,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,0,0,0,0,0,3,3,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
						1,1,1,1,1,1,1,1,1,1,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
					],
					[	//第五屏
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,3,3,3,0,0,0,0,3,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,8,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,0,0,8,8,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,0,0,8,8,8,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,0,0,8,8,8,8,0,
						1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
						1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
					],
					[	//第六屏
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,3,0,0,0,0,
						0,0,0,0,0,0,0,0,8,8,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,8,8,8,0,0,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,8,8,8,8,0,0,8,8,8,0,0,0,0,0,0,4,5,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,8,8,8,8,8,0,0,8,8,8,8,0,0,0,0,0,6,7,0,0,0,0,0,0,0,0,0,0,0,0,
						1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
						1,1,1,1,1,1,1,1,1,1,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
					],
					[	//第七屏
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,
						0,0,0,0,0,3,3,3,0,3,3,3,0,0,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,0,3,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,4,5,0,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,6,7,8,8,8,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
						1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
					],
					[	//第八屏
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,0,0,0,0,8,8,8,0,0,0,0,0,8,8,8,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,0,0,0,0,8,8,8,8,8,0,0,0,8,8,8,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,0,0,0,0,8,8,8,8,8,0,0,0,8,8,8,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
					],
					[	//第九屏
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,3,0,0,0,0,0,0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,
						0,0,8,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,3,3,3,3,3,3,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,3,3,3,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,7,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,7,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1
					],
					[	//第十屏
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,3,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,8,8,8,8,8,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,4,5,0,8,8,8,8,8,8,8,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,6,7,8,8,8,8,8,8,8,8,
						1,1,1,1,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1,
						1,1,1,1,0,0,0,1,1,0,0,0,1,0,0,0,0,1,0,0,0,0,0,1,1,1,1,1,1,1,1,1,1,1,1
					],
					[	//第十一屏
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,9,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,10,11,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,14,14,14,14,0,0,0,0,0,
						0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,13,13,13,13,0,0,0,0,0,
						8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,0,0,13,13,13,13,0,0,0,0,0,
						8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,14,14,19,19,19,19,14,14,0,0,0,
						8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,13,13,18,13,13,18,13,13,0,0,0,
						8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,0,13,13,18,13,13,18,13,13,0,0,0,
						8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,14,19,19,19,19,19,19,19,19,14,0,0,
						8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,13,13,13,13,13,13,13,13,13,13,0,0,
						8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,13,13,13,13,17,17,13,13,13,13,0,0,
						8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,12,0,0,0,0,0,0,13,13,13,13,18,18,13,13,13,13,0,0,
						8,8,0,0,0,0,0,0,0,0,0,0,0,0,0,0,8,0,0,0,0,0,0,13,13,13,13,18,18,13,13,13,13,0,0,
						1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,
						1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1
					]
		]
	},
	rowNum : 35,	//每行网格的个数
	colNum : 23,	//每列网格的个数
	gridWidth : 16,		//网格的宽度大小
	gridHeight : 16,		//网格的高度大小
	iNow : 1,		//当前关卡
	bgSpeed : 4,	//背景移动的速度
	imageX : 0,		//图像的x坐标
	imageY : 0,
	drawHeight : 16,	//要绘制的图像的高度
	init : function(){	//初始化
		this.elements();
		this.createMap();
		this.bindEvents();
		this.createMario();
		this.askDraw();
		this.ergodic();
	},
	elements : function(){	//收集所有的元素
		this.$parent = $('#main');
		this.$map = $('#map');
		this.$myCanvas = $('#myCanvas').get(0);
		this.$drawImg = $('#drawImg').get(0);
		this.ctx = this.$myCanvas.getContext('2d');
	},
	createMap : function(){		//创建地图
		var This = this;
		this.level = this['level_'+this.iNow];	//获取当前关卡
		this.bgLen = this.level.arrMap.length;

		This.$parent.css('width',this.rowNum*this.gridWidth);
		This.$parent.css('height',this.colNum*this.gridHeight);
		This.$map.css('height',this.colNum*this.gridHeight);
		This.$map.css('width',this.rowNum*this.gridWidth*this.bgLen);
		
		this.mapType = [];	//用于后面的碰撞检测
		for(var i=0;i<this.bgLen;i++){
			$mapBg = $('<div>');
			this.mapType[i] = [];
			$mapBg.css({'position':'absolute','top':0,'left':i*this.rowNum*this.gridWidth,'height':this.colNum*this.gridHeight,'width':560});
			for(var j=0;j<this.level.arrMap[i].length;j++){
				var num = This.level.arrMap[i][j];
				var $div = $('<div class="bg'+num+'"></div>');
				//为每个绝对定位的方块设置top值和left值
				var row = parseInt(j/this.rowNum);		//第几行
				var col = j%this.rowNum;				//第几列
				var L = col*this.gridWidth;
				var T = row*this.gridHeight;
				$div.css({'left':L,'top':T});

				$div.type = this.level.type[num];

				$div.appendTo($mapBg);
				this.mapType[i].push($div);
			}
			this.$map.append($mapBg);
		}
	},
	bindEvents : function(){	//事件操作的集合
		var This = this;
		$(document).on('keydown',function(ev){
			This.keyDown(ev);
			This.change();
		});
		$(document).on('keyup',function(ev){
			This.keyUp(ev);
			This.backStart();
		});
	},
	keyDown : function(ev){	//键盘按下时
		var This = this;
		switch(ev.keyCode) {
			case 37 :    //向左
			case 65 :    //A
				This.mario.left = true;
				This.mario.status = 'left';
				break;
			case 38 :    //向上
			case 74 :    //J
				This.mario.up = true;
				break;
			case 39 :    //向右
			case 70 :    //F
				This.mario.right = true;
				This.mario.status = 'right';
				break;
		}
	},
	keyUp : function(ev){	//键盘抬起时
		var This = this;
		switch(ev.keyCode) {
			case 37 :    //向左
			case 65 :    //A
				This.mario.left = false;
				break;
			case 38 :    //向上
			case 74 :    //J
				This.mario.up = false;
				break;
			case 39 :    //向右
			case 70 :    //F
				This.mario.right = false;
				break;
		}
	},
	mario : {	//马里奥数据
		id : 'mario',
		style : 'normal',
		speedX : 4,		//x方向的速度
		speedY : 4,		//y方向的速度
		jumpHeight : 128,	//跳跃的最大高度
		mariox : 80,		//马里奥起始位置的left值
		marioy : 320,	//马里奥起始位置的top值
		fly : false,	//是否在飞
		big : false,	//是否变大
		//stop : true,			//是否静止
		status : 'right',		//记录当前方向是向左还是向右
		timer : null,
		num : 0,	//马里奥升高的高度
		maxHigh : false,	//是否到达最高点
		left : false,	//是否向左
		right : false,	//是否向右
		up : false,		//是否向上
		marioWin : false	//马里奥赢了
	},
	createMario : function(){	//创建mario
		var ctx = this.$myCanvas.getContext('2d');
		ctx.drawImage(this.$drawImg,0,8*this.gridHeight,16,32,80,320,16,32);
	},
	backStart : function(){
		var This = this;
		clearInterval(This.mario.timer);
		This.mario.timer = setInterval(function(){
			if(This.mario.num > 0 && This.mario.num != 0){
				This.mario.num -= This.mario.speedY;
				This.mario.marioy += This.mario.speedY;
			}
			if(This.mario.num == 0){
				This.mario.maxHigh = false;
				This.imageX = 0;
				clearInterval(This.mario.timer);
			}
			//这一步至关重要，如果不清除之前画布上的痕迹，马里奥在画面上显示一直没动，但是实际位置已经发生了变化
			This.draw( This.$drawImg, This.imageX, This.imageY, 16, This.drawHeight, This.mario.mariox, This.mario.marioy, 16, This.drawHeight);
		},30);
	},
	change : function(){	//mario的改变 左右移动和跳跃
		var This = this;
		var player = this.mario;
		if(!player.up){
			//imageY的选择
			if(player.left){
				if(player.big){
					This.imageY = 4*This.gridHeight;
					This.drawHeight = 32;	//马里奥变大，高度上需要占用两个方块
				}else{
					This.imageY = 0;
					This.drawHeight = 16;
				}
				This.bgMove(0);				//马里奥向左走，背景向右移动
				player.mariox -= player.speedX;		//马里奥也向左移动
			}
			if(player.right){
				if(player.big){
					This.imageY = 12*This.gridHeight;
					This.drawHeight = 32;
				}else{
					This.imageY = 8*This.gridHeight;
					This.drawHeight = 16;
				}
				This.bgMove(-1);			//马里奥向右走，背景向左移动
				player.mariox += player.speedX;		//马里奥也向右移动
			}
			//imageX的变化
			This.imageX += This.gridWidth;
			if(This.imageX >= 48){
				This.imageX = 0;
			}
			//马里奥还没回到地面
			if(player.num != 0){
				player.num -= player.speedY;
				player.marioy += player.speedY;
			}
		}else{
			//没有同时按下左右移动键盘时
			if(player.big){
				if(player.status == 'left'){
					This.imageY = 6*This.gridHeight;
				}
				if(player.status == 'right'){
					This.imageY = 14*This.gridHeight;
				}
			}else{
				if(player.status == 'left'){
					This.imageY = 1*This.gridHeight;
				}
				if(player.status == 'right'){
					This.imageY = 9*This.gridHeight;
				}
			}
			if(player.left){
				This.bgMove(0);				//马里奥向左走，背景向右移动
				player.mariox -= player.speedX;		//马里奥也向左移动
			}
			if(player.right){
				This.bgMove(-1);				//马里奥向左走，背景向右移动
				player.mariox += player.speedX;		//马里奥也向左移动
			}
			This.imageX = 16;

			if(player.maxHigh){
				player.num -= player.speedY;
				if(player.num == 0){
					player.maxHigh = false;
					This.imageX = 0;
				}
				player.marioy += player.speedY;
			}
			if(!player.maxHigh && player.num < 128){
				player.num += player.speedY;
				if(player.num >= 128){
					player.maxHigh = true;
				}
				player.marioy -= player.speedY;
			}
		}

		// var L = player.mariox + player.speedX;
		// //var n = parseInt(L/This.$parent.width());
		// for(var i=0;i<This.mapType.length;i++){
		// 	for(var j=0;j<This.mapType[i].length;j++){
		// 		var object = This.mapType[i][j];
		// 		if(object.type>0){	//马里奥与物体碰撞
		// 			var collideDir = This.collideDir(player,object);
		// 			switch(collideDir){
		// 				case 'left':
		// 					if(player.speedX>0){
		// 						player.speedX = 0;
		// 						if(object.type == 12){
		// 							marioWin = true;
		// 						}
		// 					}
		// 					break;
		// 				case 'right':
		// 					if(player.speedX>0){
		// 						player.speedX = 0;
		// 					}
		// 					break;
		// 				case 'top':
		// 					if(player.speedY>0){
		// 						player.speedY = 0;
								
		// 					}
		// 					break;
		// 				case 'bottom':
		// 					break;
		// 			}
		// 		}
		// 	}
		// }

		if(player.mariox < 0){	//保证马里奥不走出地图的最左边
			player.mariox = 0;
		}
		if( -(parseInt(This.$map.css('left'))) >= player.mariox){
			player.mariox = -parseInt(This.$map.css('left'));
		}
		This.draw( This.$drawImg, This.imageX, This.imageY, 16, This.drawHeight, This.mario.mariox, This.mario.marioy, 16, This.drawHeight);
	},
	parabola : function( obj, speedX, speedY){		//抛物线运动
		// var maxHigh = this.mario.jumpHeight;
		// var This = this;
		// obj.timer = setInterval(function(){
		
		// },150);
	},
	draw : function( img, sx, sy, swidth, sheight, x, y, width, height){
		//this.ctx.clearRect(0,0,this.$myCanvas.width,this.$myCanvas.height);
		this.ctx.clearRect(x-5,y-5,swidth+10,sheight+10);
		this.ctx.drawImage(img, sx, sy, swidth, sheight, x, y, width, height);
	},
	bgMove : function(b){	//控制背景移动从而实现运动
		var marioLeft = parseInt(this.$map.css('left')) + this.mario.mariox;
		if( marioLeft >= 0 && marioLeft < 240){//如果左边没有等号，马里奥再返回地图的起点，想要再向右移动时，不会进入这个if语句
			b = 0;
		}
		var bgNowLeft = parseInt(this.$map.css('left')) + b*this.bgSpeed;
		if( bgNowLeft > 0) {	//背景已经移动到最左边。马里奥移动时，背景不再移动
			bgNowLeft = 0;
		}
		if( bgNowLeft < this.$parent.width() - this.$map.width() ){	//背景已经移动到最右边
			bgNowLeft = this.$parent.width() - this.$map.width();
		}
		this.$map.css('left', bgNowLeft );
	},
	pipePosition : [
		{
			x : 816,
			y : 304
		},
		{
			x : 1024,
			y : 288
		},
		{
			x : 1152,
			y : 272
		},
		{
			x : 1376,
			y : 272
		},
		{
			x : 3152,
			y : 304
		},
		{
			x : 3440,
			y : 304
		},
		{
			x : 4848,
			y : 288
		},
		{
			x : 4880,
			y : 272
		},
		{
			x : 5472,
			y : 304
		}
	],
	askData : [		//问号数据 位置及状态
		{
			x : 576,
			y : 256,
			status : true
		},
		{
			x : 656,
			y : 256,
			status : true
		},
		{
			x : 688,
			y : 256,
			status : true
		},
		{
			x : 672,
			y : 176,
			status : true
		},
		{
			x : 1712,
			y : 256,
			status : true
		},
		{
			x : 1968,
			y : 176,
			status : true
		},
		{
			x : 2160,
			y : 256,
			status : true
		},
		{
			x : 2208,
			y : 256,
			status : true
		},
		{
			x : 2208,
			y : 176,
			status : true
		},
		{
			x : 2256,
			y : 256,
			status : true
		},
		{
			x : 2528,
			y : 176,
			status : true
		},
		{
			x : 2544,
			y : 176,
			status : true
		},
		{
			x : 3264,
			y : 256,
			status : true
		},
		{
			x : 3488,
			y : 160,
			status : true
		},
		{
			x : 3552,
			y : 160,
			status : true
		},
		{
			x : 3568,
			y : 160,
			status : true
		},
		{
			x : 3776,
			y : 208,
			status : true
		},
		{
			x : 4576,
			y : 96,
			status : true
		},
		{
			x : 4592,
			y : 96,
			status : true
		},
		{
			x : 4992,
			y : 208,
			status : true
		},
		{
			x : 5040,
			y : 208,
			status : true
		}
	],
	askDraw : function(x,y){	//问号动画的绘制
		var This = this;
		var num = 0;
		setInterval(function(){
			This.ctx.clearRect(x,y,This.gridWidth,This.gridHeight);
			This.ctx.drawImage(This.$drawImg,num,19*This.gridHeight,This.gridWidth,This.gridHeight,x,y,This.gridWidth,This.gridHeight);
			num += 16;
			if(num >= 48){
				num = 0;
			}
		},200);
	},
	enemyPosition : [		//敌人数据
		{
			x : 640,
			y : 320,
			type : 'triangle',
			die : false
		},
		{
			x : 1136,
			y : 320,
			type : 'triangle',
			die : false
		},
		{
			x : 1344,
			y : 320,
			type : 'triangle',
			die : false
		},
		{
			x : 1360,
			y : 320,
			type : 'triangle',
			die : false
		},
		{
			x : 1744,
			y : 160,
			type : 'triangle',
			die : false
		},
		{
			x : 1760,
			y : 160,
			type : 'triangle',
			die : false
		},
		{
			x : 2064,
			y : 320,
			type : 'triangle',
			die : false
		},
		{
			x : 2080,
			y : 320,
			type : 'triangle',
			die : false
		},
		{
			x : 2304,
			y : 320,
			type : 'triangle',
			die : false
		},
		{
			x : 3360,
			y : 320,
			type : 'triangle',
			die : false
		},
		{
			x : 1136,
			y : 320,
			type : 'triangle',
			die : false
		},
		{
			x : 1344,
			y : 320,
			type : 'triangle',
			die : false
		},
		{
			x : 1360,
			y : 320,
			type : 'triangle',
			die : false
		},
		{
			x : 1744,
			y : 160,
			type : 'triangle',
			die : false
		},
		{
			x : 1760,
			y : 160,
			type : 'triangle',
			die : false
		},
		{
			x : 2064,
			y : 320,
			type : 'triangle',
			die : false
		},
		{
			x : 2080,
			y : 320,
			type : 'triangle',
			die : false
		},
		{
			x : 2304,
			y : 320,
			type : 'triangle',
			die : false
		},
		{
			x : 3360,
			y : 320,
			type : 'triangle',
			die : false
		}
	],
	pipeCollide : function(){	//pipe管道碰撞检测
		// for(var i=0;i<this.enemyPosition.length;i++){
		// 	if( ((this.mario.mariox+this.gridWidth) >= this.enemyPosition[i].x) && this.mario.mariox <= (this.enemyPosition[i].x + 2*this.gridWidth ) ){
		// 		if( (this.mario.marioy+this.gridHeight) > this.enemyPosition[i].y ){
		// 			this.mario.mariox = this.enemyPosition[i].x - 20;
		// 			this.$map.css('left', 96-this.enemyPosition[i].x );
		// 			return false;
		// 		}else if( (this.mario.marioy+this.gridHeight) <= this.enemyPosition[i].y ){
		// 			this.mario.marioy = this.enemyPosition[i].y - 16;
		// 			return false;
		// 		}
		// 	}
		// }
	},
	collideDir : function( obj1, obj2 ){	//碰撞方向的检测
		var L1 = this.getPosition(obj1).left;
		var T1 = this.getPosition(obj1).top;

		var L2 = this.getPosition(obj2).left;
		var T2 = this.getPosition(obj2).top;

		if(L1<L2){
			return 'left';
		}
		if(L1>L2){
			return 'right';
		}
		if(T1<T2){
			return 'bottom';
		}
		if(T1>T2){
			return 'top';
		}
		
	},
	getPosition : function( obj ){	//物体与物体的碰撞检测，不包括马里奥
		var pos = {left: 0, top:0};
		while( obj ){
			pos.left += obj.offsetLeft;
			pos.top += obj.offsetTop;
		}
		return pos;
	},
	collide : function( obj1, obj2){	//碰撞检测
		var pos1 = this.getObjPosition(obj1);
		var L1 = pos1.L;
		var R1 = pos1.R;
		var T1 = pos1.T;
		var B1 = pos1.B;

		var pos2 = this.getObjPosition(obj2);
		var L2 = pos2.L;
		var R2 = pos2.R;
		var T2 = pos2.T;
		var B2 = pos2.B;

		if ( R1 < L2 || L1 > R2 || B1 < T2 || T1 > B2 ) {	//没有发生碰撞
			return false;
		}else{	//发生碰撞
			return true;
		}
	},
	getObjPosition : function(obj){		//获取对象所在位置
		var pos = {L: 0,R: 0,T:0, B:0};
		pos.L = obj.position().left;
		pos.R = obj.position().left + obj.width();
		pos.T = obj.position().top;
		pos.B = obj.position().top + obj.height();
		return pos;
	},
	ergodic : function(){	//遍历
		var This = this;
		for(var i in this.askData){	//遍历所有的问号
			This.askDraw(This.askData[i].x,This.askData[i].y);
		}

		
		for(var i in this.enemyPosition){		//遍历所有敌人
			This.triangleDraw(This.enemyPosition[i]);
			//物体进入可视区触发移动
			if(!This.enemyPosition[i].die && (-parseInt(this.$map.css('left')) + this.$parent.width()) > This.enemyPosition[i].x){
				This.triangleMove( This.enemyPosition[i] );
			}
		}
	},
	triangleMove : function(obj){		//三角怪的移动
		clearInterval(obj.timer);
		var This = this;
		var speedX = -4;
		var speedY = 4;
		var L = 0;
		var T = 0;
		obj.timer = setInterval(function(){
			L = obj.x + speedX;
			T = obj.y + speedY;
			//如果敌人超出可视区的左侧
			if( (L+This.gridWidth) < -parseInt(this.$map.css('left'))){
				clearInterval(obj.timer);
			}

			var n = parseInt(L/This.$parent.width());




			obj.x = L;
			obj.y = T;
		},200);
	},
	triangleDraw : function(obj){		//三角怪的绘制
		var This = this;
		var num = 0;
		var left = 0;
		setInterval(function(){
			This.ctx.clearRect(obj.x,obj.y,This.gridWidth,This.gridHeight);
			This.ctx.drawImage(This.$drawImg,num,18*This.gridHeight,This.gridWidth,This.gridHeight,obj.x,obj.y,This.gridWidth,This.gridHeight);
			num += 16;
			if(num >= 32){
				num = 0;
			}
			//left = -parseInt(this.$map.css('left')) + this.$parent.width();
		},200);
	},
}
Game.init();